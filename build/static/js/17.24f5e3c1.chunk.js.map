{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/trezor-058b9998.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/bnc-onboard/dist/esm/providerEngine-81ff17e9.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/classes.js","../node_modules/fast-safe-stringify/index.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/utils.js","../node_modules/web3-provider-engine/subproviders/rpc.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/index.js","../node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/errors.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","trezorProvider","_x2","_trezorProvider","mark","_callee13","options","TrezorConnectLibrary","EthereumTx","ethUtil","TrezorConnect","DEVICE_EVENT","DEVICE","networkId","email","appUrl","rpcUrl","BigNumber","networkName","resetWalletState","dPath","addressToPath","enabled","customPath","account","provider","disconnect","setPath","_setPath","isCustomPath","enable","getAddress","_getAddress","addresses","setPrimaryAccount","getPublicKey","_getPublicKey","getPrimaryAddress","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","getBalance","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","wrap","_context13","prev","_callee12","message","_","address","path","_context12","size","entries","abrupt","ethereumSignMessage","stripHexPrefix","data","hex","response","success","payload","toChecksumAddress","Error","signature","concat","stop","_x9","_callee11","transactionData","transaction","trezorResult","_context11","values","Transaction","chain","sent","v","r","s","serialize","_x8","nonce","gasPrice","gas","to","ethereumSignTransaction","gasLimit","chainId","sendAsync","jsonrpc","method","params","id","e","res","result","all","map","_ref3","_callee5","balance","_context5","_x7","_callee10","getMore","_context10","t0","generateAddresses","forEach","_ref4","set","_x6","_callee9","accounts","_context9","_callee8","_context8","coin","publicKey","chainCode","serializedPath","accountIndex","findIndex","_ref","unshift","splice","Map","keys","_callee7","errorMsg","_context7","ethereumGetAddress","showOnTrezor","_x5","_callee6","custom","_context6","isValidPath","_x3","_x4","manifest","createProvider","getAccounts","callback","signTransaction","processMessage","messageData","processPersonalMessage","signMessage","signPersonalMessage","on","event","type","DISCONNECT","disconnected","walletName","send","trezor","preferred","label","iconSrc","svg","wallet","_wallet","_callee4","helpers","_context4","connect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","desktop","mobile","osExclusions","getPrototypeOf","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","module","exports","has","Wrapper","create","enumerable","writable","configurable","Function","indexOf","config","idMgmt","HookedWalletSubprovider","rpcSubProvider","RpcSource","includes","Web3ProviderEngine","addProvider","SubscriptionSubprovider","FilterSubprovider","start","safeStringify","require","EthereumRpcError","code","Number","isInteger","serialized","stack","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","stringify","default","stable","deterministicStringify","stableStringify","replacerStack","obj","replacer","spacer","decirc","val","k","parent","propertyDescriptor","getOwnPropertyDescriptor","defineProperty","pop","JSON","replaceGetterValues","part","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","errorValues","FALLBACK_ERROR_CODE","rpc","internal","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","isJsonRpcServerError","isValidCode","assignOriginalError","assign","serializeError","fallbackError","hasOwnProperty","originalError","JSON_RPC_SERVER_ERROR_MESSAGE","xhr","process","browser","inherits","createPayload","Subprovider","ethErrors","opts","handleRequest","end","targetUrl","sanitizedPayload","sanitizePayload","newPayload","uri","headers","body","rejectUnauthorized","timeout","statusCode","methodNotFound","msg","parse","console","ERROR_CODES","getEthJsonRpcError","validateOpts","getEthProviderError","invalidRequest","invalidParams","server","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","userRejectedRequest","unauthorized","unsupportedMethod"],"mappings":"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","file":"static/js/17.24f5e3c1.chunk.js","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'web3-provider-engine';\nimport 'web3-provider-engine/subproviders/rpc';\nimport 'web3-provider-engine/subproviders/hooked-wallet';\nimport 'web3-provider-engine/subproviders/subscriptions';\nimport 'web3-provider-engine/subproviders/filters';\nimport createProvider from './providerEngine-81ff17e9.js';\nimport 'hdkey';\nimport 'ethereumjs-util';\nimport 'buffer';\nimport { isValidPath, generateAddresses } from './hd-wallet-642b97e3.js';\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\nvar TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, EthereumTx, ethUtil, TrezorConnect, DEVICE_EVENT, DEVICE, networkId, email, appUrl, rpcUrl, BigNumber, networkName, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, trezorResult, signature;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        transaction = new EthereumTx.Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        _context11.next = 7;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 7:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 10;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 10:\n                        signature = trezorResult.payload;\n                        transaction.v = signature.v;\n                        transaction.r = signature.r;\n                        transaction.s = signature.s;\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('ethereumjs-tx');\n\n          case 28:\n            EthereumTx = _context13.sent;\n            _context13.next = 31;\n            return import('ethereumjs-util');\n\n          case 31:\n            ethUtil = _context13.sent;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 54:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nexport default createProvider;","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","const xhr = process.browser ? require('xhr') : require('request')\nconst inherits = require('util').inherits\nconst createPayload = require('../util/create-payload.js')\nconst Subprovider = require('./subprovider.js')\nconst { ethErrors, serializeError } = require('eth-json-rpc-errors')\n\n\nmodule.exports = RpcSource\n\ninherits(RpcSource, Subprovider)\n\nfunction RpcSource(opts) {\n  const self = this\n  self.rpcUrl = opts.rpcUrl\n}\n\nRpcSource.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  const targetUrl = self.rpcUrl\n\n  // overwrite id to conflict with other concurrent users\n  const sanitizedPayload = sanitizePayload(payload)\n  const newPayload = createPayload(sanitizedPayload)\n\n  xhr({\n    uri: targetUrl,\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPayload),\n    rejectUnauthorized: false,\n    timeout: 20000,\n  }, function(err, res, body) {\n    if (err) return end(serializeError(err))\n\n    // check for error code\n    switch (res.statusCode) {\n      case 405:\n        return end(ethErrors.rpc.methodNotFound())\n      case 504: // Gateway timeout\n        return (function(){\n          let msg = `Gateway timeout. The request took too long to process. `\n          msg += `This can happen when querying logs over too wide a block range.`\n          const err = new Error(msg)\n          return end(serializeError(err))\n        })()\n      case 429: // Too many requests (rate limiting)\n        return (function(){\n          const err = new Error(`Too Many Requests`)\n          return end(serializeError(err))\n        })()\n      default:\n        if (res.statusCode != 200) {\n          const msg = 'Unknown Error: ' + res.body\n          const err = new Error(msg)\n          return end(serializeError(err))\n        }\n    }\n\n    // parse response\n    let data\n    try {\n      data = JSON.parse(body)\n    } catch (err) {\n      console.error(err.stack)\n      return end(serializeError(err))\n    }\n    if (data.error) return end(data.error)\n\n    end(null, data.result)\n  })\n}\n\n// drops any non-standard params\nfunction sanitizePayload (payload) {\n  return {\n    id: payload.id,\n    jsonrpc: payload.jsonrpc,\n    method: payload.method,\n    params: payload.params,\n  }\n}","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n"],"sourceRoot":""}