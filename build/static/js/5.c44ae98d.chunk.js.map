{"version":3,"sources":["../node_modules/secp256k1/elliptic.js","../node_modules/secp256k1/lib/index.js","../node_modules/secp256k1/lib/assert.js","../node_modules/secp256k1/lib/der.js","../node_modules/bip66/index.js","../node_modules/secp256k1/lib/elliptic/index.js","../node_modules/secp256k1/node_modules/bn.js/lib/bn.js"],"names":["module","exports","require","assert","der","messages","initCompressedValue","value","defaultValue","undefined","isBoolean","COMPRESSED_TYPE_INVALID","secp256k1","privateKeyVerify","privateKey","isBuffer","EC_PRIVATE_KEY_TYPE_INVALID","length","privateKeyExport","compressed","isBufferLength","EC_PRIVATE_KEY_LENGTH_INVALID","publicKey","privateKeyImport","Error","EC_PRIVATE_KEY_IMPORT_DER_FAIL","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","TWEAK_TYPE_INVALID","TWEAK_LENGTH_INVALID","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","EC_PUBLIC_KEY_TYPE_INVALID","isBufferLength2","EC_PUBLIC_KEY_LENGTH_INVALID","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","isArray","EC_PUBLIC_KEYS_TYPE_INVALID","isLengthGTZero","EC_PUBLIC_KEYS_LENGTH_INVALID","i","signatureNormalize","signature","ECDSA_SIGNATURE_TYPE_INVALID","ECDSA_SIGNATURE_LENGTH_INVALID","signatureExport","sigObj","signatureImport","sig","ECDSA_SIGNATURE_PARSE_DER_FAIL","signatureImportLax","sign","message","options","MSG32_TYPE_INVALID","MSG32_LENGTH_INVALID","data","noncefn","isObject","OPTIONS_TYPE_INVALID","OPTIONS_DATA_TYPE_INVALID","OPTIONS_DATA_LENGTH_INVALID","isFunction","OPTIONS_NONCEFN_TYPE_INVALID","verify","recover","recovery","isNumber","RECOVERY_ID_TYPE_INVALID","isNumberInInterval","RECOVERY_ID_VALUE_INVALID","ecdh","ecdhUnsafe","toString","Object","prototype","Array","TypeError","call","Buffer","buffer","RangeError","length1","length2","number","x","y","bip66","EC_PRIVKEY_EXPORT_DER_COMPRESSED","from","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","copy","index","lenb","len","slice","r","concat","lenR","posR","s","lenS","posS","encode","alloc","decode","err","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","check","allocUnsafe","createHash","BN","EC","ec","ecparams","curve","loadPublicKey","first","xBuffer","cmp","p","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","yBuffer","x3","redISub","isZero","loadUncompressedPublicKey","bn","n","d","EC_PRIVATE_KEY_EXPORT_DER_FAIL","keyFromPrivate","getPublic","sub","umod","toArrayLike","EC_PRIVATE_KEY_RANGE_INVALID","invm","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","iadd","isub","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","imul","EC_PUBLIC_KEY_CREATE_FAIL","pair","EC_PUBLIC_KEY_PARSE_FAIL","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","point","g","mul","add","isInfinity","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","pairs","j","EC_PUBLIC_KEY_COMBINE_FAIL","ECDSA_SIGNATURE_PARSE_FAIL","nh","getNonce","counter","nonce","ECDSA_SIGN_FAIL","canonical","k","pers","recoveryParam","sigr","sigs","recoverPubKey","ECDSA_RECOVER_FAIL","shared","update","digest","scalar","ECDH_FAIL","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","base","endian","isBN","this","negative","words","_init","wordSize","e","parseHex","str","start","end","Math","min","c","charCodeAt","parseBase","num","max","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","modn","idivn","toNumber","ret","toJSON","toBuffer","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redSub","redShl","shl","redMul","_verify2","_verify1","redISqr","sqrt","redInvm","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","split","imulK","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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AAM,EAAM,EAAM,EAE1F,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,EAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAC1F,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,EAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,IAAM,GAAM,EAAM,GAAM,EAExE,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,E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","file":"static/js/5.c44ae98d.chunk.js","sourcesContent":["'use strict'\nmodule.exports = require('./lib')(require('./lib/elliptic'))\n","'use strict'\nvar assert = require('./assert')\nvar der = require('./der')\nvar messages = require('./messages.json')\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyNegate: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyNegate(privateKey)\n    },\n\n    privateKeyModInverse: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyModInverse(privateKey)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n","'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n","// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\n\nvar messages = require('../messages.json')\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return Buffer.from(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  var point = ecparams.g.mul(tweak).add(pair.pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, { x: pair.pub.x, y: pair.pub.y })\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return Buffer.from(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed))\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}