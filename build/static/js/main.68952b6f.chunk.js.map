{"version":3,"sources":["components/common/GlobalStyle.js","components/common/Header/HeaderComponents.js","utils/services.js","components/common/Header/ConnectWallet.js","redux/actions/ethereum.js","redux/actions/constants.js","utils/addrShortener.js","components/common/Header/index.js","components/common/Layout.js","components/pages/Home.js","components/pages/Earn.js","components/pages/Borrow.js","utils/JLoansFactoryConstructor.js","components/pages/Trade.js","components/pages/NotFound.js","redux/reducers/alert.js","redux/reducers/ethereum.js","redux/reducers/index.js","redux/store.js","components/App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Link","isActive","children","props","HeaderWrapper","styled","header","color","NavContainer","nav","NavBrand","NavLinks","div","NavItem","css","Options","Dropdown","StyledButton","Button","Banner","PageMenu","PageMenuContainer","PageMenuItem","MobileMenuContainer","MobileMenuIcon","onboard","undefined","notify","connect","state","ethereum","setAddress","address","dispatch","type","payload","setNetwork","network","setBalance","balance","setWalletAndWeb3","wallet","web3","Web3","provider","useEffect","subscriptions","addr","Onboard","hideBranding","darkMode","networkId","walletSelect","wallets","walletName","preferred","infuraKey","handleConnect","a","walletCheck","onClick","onKeyUp","ReactHtmlParser","substring","length","Header","pathname","useLocation","useState","path","setPath","menuOpen","setMenuOpen","bannerDetails","home","inactiveColor","title","description","borrow","earn","trade","split","Container","to","isOpen","text","Menu","Item","Layout","style","marginTop","Home","Earn","setNotify","JloansFactory","eth","Contract","abi","JLoansFactoryConstructor","console","log","methods","Notify","dappId","Trade","NotFound","className","initialState","combineReducers","alert","action","filter","id","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","component","Borrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68952b6f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body{\r\n    background: white;\r\n    min-height: 100vh;\r\n    margin: 0;\r\n    color: black;\r\n    font-family: 'Mulish'\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    \r\n  }\r\n`;\r\n\r\nexport { GlobalStyle };\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Button, Dropdown } from 'semantic-ui-react';\r\nimport { Link as ReactRouterDomLink } from 'react-router-dom';\r\n\r\nconst Link = ({ isActive, children, ...props }) => {\r\n  return <ReactRouterDomLink {...props}>{children}</ReactRouterDomLink>;\r\n};\r\n\r\nconst HeaderWrapper = styled.header`\r\n  display: grid;\r\n  grid-template-rows: 40% 50% 10%;\r\n  height: 39.5%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  top: 0;\r\n  background: ${(props) => props.color};\r\n`;\r\n\r\nconst NavContainer = styled.nav`\r\n  display: none;\r\n\r\n  @media (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: 10% 60% 10% 20%;\r\n  }\r\n`;\r\n\r\nconst NavBrand = styled(Link)`\r\n  grid-column: 1 / 2;\r\n  padding: 35px 0;\r\n  color: white;\r\n`;\r\n\r\nconst NavLinks = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: flex-end;\r\n  \r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NavItem = styled(Link)`\r\n  padding: 40px 30px 5px 30px;\r\n  display: block;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  > h3 {\r\n    ${(props) =>\r\n      props.isActive\r\n        ? css`\r\n            color: white;\r\n            border-bottom: 2px white solid;\r\n          `\r\n        : css`\r\n            color: ${(props) => props.color};\r\n            border-bottom: none;\r\n          `}\r\n  }\r\n`;\r\n\r\nconst Options = styled(Dropdown)`\r\n  place-self: center;\r\n  padding: 8px 10px;\r\n  color: black;\r\n  background: white;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  place-self: center;\r\n  background: white;\r\n  color: white;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  margin-top: 2vh;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst PageMenu = styled.div`\r\n  grid-row: 3 / 4;\r\n  margin-top: 2vh;\r\n  color: white;\r\n`;\r\n\r\nconst PageMenuContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PageMenuItem = styled.div`\r\n  padding: 40px 30px 5px 30px;\r\n  display: block;\r\n  text-align: center;\r\n  > h3 {\r\n    ${(props) =>\r\n      props.isActive\r\n        ? css`\r\n            color: white;\r\n            border-bottom: 2px white solid;\r\n          `\r\n        : css`\r\n            color: ${(props) => props.color};\r\n            border-bottom: none;\r\n          `}\r\n  }\r\n`;\r\n\r\nconst MobileMenuContainer = styled.nav`\r\n  display: grid;\r\n  grid-template-columns: 15% auto 15%;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MobileMenuIcon = styled.div`\r\n  grid-column: 3 / 4;\r\n  margin: auto 0 auto auto;\r\n  width: 35px;\r\n  min-width: 35px;\r\n  padding: 5px;\r\n  > div {\r\n    height: 3px;\r\n    background: white;\r\n    margin: 5px 0;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport {\r\n  HeaderWrapper,\r\n  NavContainer,\r\n  NavLinks,\r\n  NavBrand,\r\n  NavItem,\r\n  Options,\r\n  StyledButton,\r\n  Banner,\r\n  PageMenu,\r\n  PageMenuContainer,\r\n  PageMenuItem,\r\n  MobileMenuContainer,\r\n  MobileMenuIcon\r\n};\r\n","import Onboard from 'bnc-onboard';\r\nimport Notify from 'bnc-notify';\r\n\r\nlet onboard = undefined;\r\nlet notify = undefined;\r\nconst networkId = 42;\r\nconst dappId = '12153f55-f29e-4f11-aa07-90f10da5d778';\r\n\r\nexport function initOnboard(subscriptions) {\r\n  if (!onboard) {\r\n    onboard = Onboard({\r\n      subscriptions,\r\n      hideBranding: true,\r\n      darkMode: true,\r\n      networkId,\r\n      walletSelect: {\r\n        wallets: [\r\n          { walletName: 'metamask', preferred: true },\r\n          { walletName: 'coinbase', preferred: true },\r\n          {\r\n            walletName: 'walletConnect',\r\n            infuraKey: 'b036e8717e624f5c826fdb9205e391d2',\r\n            preferred: true\r\n          }\r\n        ]\r\n      }\r\n    });\r\n  }\r\n  return onboard;\r\n}\r\n\r\nexport function initNotify() {\r\n  if (!notify) {\r\n    notify = Notify({\r\n      dappId,\r\n      networkId\r\n    });\r\n  }\r\n  return notify;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  setAddress,\r\n  setNetwork,\r\n  setBalance,\r\n  setWalletAndWeb3\r\n} from 'redux/actions/ethereum';\r\nimport { initOnboard } from 'utils/services';\r\nimport addrShortener from 'utils/addrShortener';\r\n\r\nimport { StyledButton } from './HeaderComponents';\r\n\r\nconst ConnectWallet = ({\r\n  setAddress,\r\n  setNetwork,\r\n  setBalance,\r\n  setWalletAndWeb3,\r\n  ethereum: { address, network, balance, wallet, web3 }\r\n}) => {\r\n  useEffect(() => {}, [address, network, balance, wallet, web3]);\r\n\r\n  const onboard = initOnboard({\r\n    address: (address) => {\r\n      setAddress(address);\r\n    },\r\n    network: (network) => {\r\n      setNetwork(network);\r\n    },\r\n    balance: (balance) => {\r\n      setBalance(balance);\r\n    },\r\n    wallet: (wallet) => {\r\n      setWalletAndWeb3(wallet);\r\n    }\r\n  });\r\n\r\n  const handleConnect = async () => {\r\n    await onboard.walletSelect();\r\n    await onboard.walletCheck();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {balance < 0 ? (\r\n        <StyledButton onClick={handleConnect} onKeyUp={handleConnect}>\r\n          Connect\r\n        </StyledButton>\r\n      ) : (\r\n        <StyledButton onClick={handleConnect} onKeyUp={handleConnect}>\r\n          {addrShortener(address)}\r\n        </StyledButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nConnectWallet.propTypes = {\r\n  setAddress: PropTypes.func.isRequired,\r\n  setNetwork: PropTypes.func.isRequired,\r\n  setBalance: PropTypes.func.isRequired,\r\n  setWalletAndWeb3: PropTypes.func.isRequired,\r\n  ethereum: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ethereum: state.ethereum\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAddress,\r\n  setNetwork,\r\n  setBalance,\r\n  setWalletAndWeb3\r\n})(ConnectWallet);\r\n","import Web3 from 'web3';\r\nimport {\r\n  SET_ADDRESS,\r\n  SET_NETWORK,\r\n  SET_BALANCE,\r\n  SET_WALLET,\r\n  SET_WEB3,\r\n} from './constants';\r\n\r\n\r\nexport const setAddress = (address) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_ADDRESS,\r\n    payload: address\r\n  });\r\n};\r\n\r\nexport const setNetwork = (network) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_NETWORK,\r\n    payload: network\r\n  });\r\n};\r\n\r\nexport const setBalance = (balance) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_BALANCE,\r\n    payload: balance\r\n  });\r\n};\r\n\r\nexport const setWalletAndWeb3 = (wallet) => (dispatch) => {\r\n  let web3 = new Web3(wallet.provider);\r\n  dispatch({\r\n    type: SET_WALLET,\r\n    payload: wallet\r\n  });\r\n  dispatch({\r\n    type: SET_WEB3,\r\n    payload: web3\r\n  });\r\n};\r\n","// Alerts\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\n// Ethereum\r\nexport const SET_ADDRESS = 'SET_ADDRESS';\r\nexport const SET_NETWORK = 'SET_NETWORK';\r\nexport const SET_BALANCE = 'SET_BALANCE';\r\nexport const SET_WALLET = 'SET_WALLET';\r\nexport const SET_WEB3 = 'SET_WEB3';","import ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default function (addr) {\r\n  return ReactHtmlParser(\r\n    addr.substring(0, 5) +\r\n      '...' +\r\n    addr.substring(addr.length - 4, addr.length)\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Container, Dropdown } from 'semantic-ui-react';\r\nimport {\r\n  HeaderWrapper,\r\n  NavContainer,\r\n  NavLinks,\r\n  NavBrand,\r\n  NavItem,\r\n  Options,\r\n  Banner,\r\n  PageMenu,\r\n  PageMenuContainer,\r\n  PageMenuItem,\r\n  MobileMenuContainer,\r\n  MobileMenuIcon\r\n} from './HeaderComponents';\r\n\r\nimport ConnectWallet from './ConnectWallet';\r\n\r\nexport function Header() {\r\n  const { pathname } = useLocation();\r\n  const [path, setPath] = useState('home');\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const bannerDetails = {\r\n    home: {\r\n      color: '#2c2cdf',\r\n      inactiveColor: '#aba9f9',\r\n      title: 'Welcome to Jibrel',\r\n      description: 'PLACEHOLDER SLOGAN'\r\n    },\r\n    borrow: {\r\n      color: '#5411e2',\r\n      inactiveColor: '#a988f1',\r\n      title: 'Borrower Markets',\r\n      description: 'APPLY FOR A COLLATERALIZED LOAN USING YOUR CRYPTOCURRENCY'\r\n    },\r\n    earn: {\r\n      color: '#389725',\r\n      inactiveColor: '#8edd8d',\r\n      title: 'Earning Markets',\r\n      description: 'EARN INTEREST ON YOUR CRYPTOCURRENCY DEPOSITS'\r\n    },\r\n    trade: {\r\n      color: '#1f1f1f',\r\n      inactiveColor: '#8f8f8f',\r\n      title: 'Trading Markets',\r\n      description: 'BUY & SELL TOKENIZED DERIVATIVES ON ETHEREUM'\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const parsePath = () => {\r\n      if (pathname === '/') {\r\n        setPath('home');\r\n      } else {\r\n        setPath(pathname.split('/')[1]);\r\n      }\r\n    };\r\n\r\n    parsePath();\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper color={bannerDetails[path].color}>\r\n        <Container>\r\n          <MobileMenuContainer>\r\n            <NavBrand to='/'>\r\n              <h1>\r\n                <strong>Jibrel</strong>\r\n              </h1>\r\n            </NavBrand>\r\n            <MobileMenuIcon onClick={() => setMenuOpen((isOpen) => !isOpen)}>\r\n              <div />\r\n              <div />\r\n              <div />\r\n            </MobileMenuIcon>\r\n            {menuOpen && (\r\n              <NavLinks>\r\n                <NavItem to='/borrow' isActive={pathname === '/borrow'} color={bannerDetails[path].inactiveColor}>\r\n                  <h3>BORROW</h3>\r\n                </NavItem>\r\n                <NavItem to='/earn' isActive={pathname === '/earn'} color={bannerDetails[path].inactiveColor}>\r\n                  <h3>EARN</h3>\r\n                </NavItem>\r\n                <NavItem to='/trade' isActive={pathname === '/trade'} color={bannerDetails[path].inactiveColor}>\r\n                  <h3>TRADE</h3>\r\n                </NavItem>\r\n              </NavLinks>\r\n            )}\r\n          </MobileMenuContainer>\r\n          <NavContainer>\r\n            <NavBrand to='/'>\r\n              <h1>\r\n                <strong>Jibrel</strong>\r\n              </h1>\r\n            </NavBrand>\r\n            <NavLinks>\r\n              <NavItem to='/borrow' isActive={pathname === '/borrow'} color={bannerDetails[path].inactiveColor}>\r\n                <h3>BORROW</h3>\r\n              </NavItem>\r\n              <NavItem to='/earn' isActive={pathname === '/earn'} color={bannerDetails[path].inactiveColor}>\r\n                <h3>EARN</h3>\r\n              </NavItem>\r\n              <NavItem to='/trade' isActive={pathname === '/trade'} color={bannerDetails[path].inactiveColor}>\r\n                <h3>TRADE</h3>\r\n              </NavItem>\r\n            </NavLinks>\r\n            <Options text='USD'>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item>USD</Dropdown.Item>\r\n                <Dropdown.Item>BTC</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Options>\r\n            <ConnectWallet />\r\n          </NavContainer>\r\n          <Banner color={bannerDetails[path].inactiveColor}>\r\n            <h1>{bannerDetails[path].title}</h1>\r\n            <h4>{bannerDetails[path].description}</h4>\r\n          </Banner>\r\n          <PageMenu>\r\n            <PageMenuContainer>\r\n              <PageMenuItem isActive color={bannerDetails[path].inactiveColor}>\r\n                <h3>Test</h3>\r\n              </PageMenuItem>\r\n              <PageMenuItem color={bannerDetails[path].inactiveColor}>\r\n                <h3>Test2</h3>\r\n              </PageMenuItem>\r\n              <PageMenuItem color={bannerDetails[path].inactiveColor}>\r\n                <h3>How-To</h3>\r\n              </PageMenuItem>\r\n            </PageMenuContainer>\r\n          </PageMenu>\r\n        </Container>\r\n      </HeaderWrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Header } from 'components/common/Header';\r\n\r\nexport function Layout({ children }) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container style={{ marginTop: '3vh' }}>{children}</Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Layout } from 'components/common';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Layout>\r\n      <h1>Home</h1>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Layout } from 'components/common';\r\n\r\nexport default function Earn() {\r\n  return (\r\n    <Layout>\r\n      <h1>Earn</h1>;\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { initNotify } from 'utils/services';\r\nimport { Layout } from 'components/common';\r\nimport JLoansFactoryConstructor from 'utils/JLoansFactoryConstructor';\r\n\r\nconst Borrow = ({ ethereum: { address, network, balance, wallet, web3 } }) => {\r\n  const [notify, setNotify] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (web3) {\r\n      const JloansFactory = JLoansFactoryConstructor(web3);\r\n      console.log(JloansFactory.methods);\r\n    }\r\n\r\n    setNotify(initNotify());\r\n  }, [address, network, balance, wallet, web3]);\r\n\r\n  // const createNewLoan = async () => {\r\n  // };\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Borrow</h1>;\r\n    </Layout>\r\n  );\r\n};\r\n\r\nBorrow.propTypes = {\r\n  ethereum: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ethereum: state.ethereum\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Borrow);\r\n","import { abi } from 'build/JLoansFactory.json';\r\nconst address = '0xc90e8E5680340E72240c6322277FA9f9Ee93B7a5';\r\n\r\nexport default function gatewayContractSetup(web3) {\r\n  return new web3.eth.Contract(abi, address);\r\n}\r\n","import React from 'react';\r\nimport { Layout } from 'components/common';\r\n\r\nexport default function Trade() {\r\n  return (\r\n    <Layout>\r\n      <h1>Trade</h1>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Fragment>\r\n      <h1>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p>X_X This page does not exist X_X</p>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ADDRESS,\r\n  SET_NETWORK,\r\n  SET_BALANCE,\r\n  SET_WALLET,\r\n  SET_WEB3,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  balance: -1,\r\n  address: undefined\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ADDRESS:\r\n      return { ...state, address: payload };\r\n    case SET_NETWORK:\r\n      return { ...state, network: payload };\r\n    case SET_BALANCE:\r\n      return { ...state, balance: payload };\r\n    case SET_WALLET:\r\n      return { ...state, wallet: payload };\r\n    case SET_WEB3:\r\n      return { ...state, web3: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport ethereum from './ethereum';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  ethereum\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { GlobalStyle } from 'components/common';\n\n// Routes\nimport Home from 'components/pages/Home';\nimport Earn from 'components/pages/Earn';\nimport Borrow from 'components/pages/Borrow';\nimport Trade from 'components/pages/Trade';\nimport NotFound from 'components/pages/NotFound';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/earn' component={Earn} />\n          <Route exact path='/borrow' component={Borrow} />\n          <Route exact path='/trade' component={Trade} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}